_6a5‍.x([["default",()=>_6a5‍.o]]);_6a5‍.d({
  Query: {
    words: async (parent, args, { models }) => {
      return await models.Word.findAll();
    },
    word: async (parent, { id }, { models }) => {
      return await models.Word.findById(id);
    },
  },
  Mutation: {
    createWord: async (parent, { text }, { me, models }) => {
      try {
        return await models.Word.create({
          text,
          userId: me.id,
        });
      } catch (error) {
        throw new Error('My custom error message');
      }
    },

    deleteWord: async (parent, { id }, { models }) => {
      return await models.Word.destroy({ where: { id } });
    },
  },

  // __resolverReference
  Word: {
    user: async (message, args, { models }) => {
      return await models.User.findById(word.userId);
    },
  },
});

// User: {
//     __resolveReference(user, { fetchUserById }){
//       return fetchUserById(user.id)
//     }
//   }
